@{
	ViewBag.Title = "С чего начать";
}

<div class="row">
	<div class="col-md-12">
		<h1>С чего начать</h1>
		<h2>Установка</h2>
		<p>
			Для работы системы понадобится компьютер с <strong>ОС Windows 7 или более поздней версии</strong>.
			Также <strong>необходимо <a href="http://www.microsoft.com/en-us/download/details.aspx?id=40779" target="_blank">скачать</a>
				и установить .NET Framework 4.5</strong>.
		</p>
		<p>
			После этого скачайте и запустите 
			<a href="~/download/service-setup.msi"><strong>инсталлятор</strong></a>, котрый установит ThinkingHome.System на ваш
			компьютер. Во время установки можно выбрать язык (русский/английский) и порт для встроенного веб-сервера. 
            Сервис будет установлен в папку <em>C:\Program Files\ThinkingHome\service</em>.
		</p>
		<div class="row">
			<div class="col-md-6">
				<img src="~/Content/images/setup-step-2.png" class="img-responsive ths-image" />
			</div>
			<div class="col-md-6">
				<img src="~/Content/images/setup-step-3.png" class="img-responsive ths-image" />
			</div>
		</div>
		<p>
			После установки на рабочем столе появится ярлык <em>ThinkingHome Control Panel</em>,
			при запуске которого в браузере откроется web-интерфейс системы. Вы можете также открыть
			web-интерфейс системы, набрав в адресной строке браузера <kbd>http://localhost:41831</kbd>,
			где "localhost" - это название или IP-адрес вашего компьютера, а "41831" &mdash; номер порта,
            указанный во время установки.
		</p>
		<h2>Организация веб-интерфейса</h2>
		<p>
			Интерфейс управления домом состоит из разделов. Плагины могут добавлять в интерфейс собственные
            разделы (любой плагин может добавить любое количество разделов). Разделы 
			поделены на 2 группы: пользовательские (разделы, с которыми пользователи работают в повседневной жизни, 
            например, «прогноз погоды» и «будильники») и системные (различные настройки, например, раздел домашних сценариев).
		</p>
		<p>
			Кроме страниц разделов веб-интерфейс имеет три специальных страницы:
		</p>
		<ul>
			<li>список системных разделов;</li>
			<li>список пользовательских разделов;</li>
			<li>рабочий стол (стартовая страница).</li>
		</ul>
		<h3>Списки разделов</h3>
		<p>
			При установке новых плагинов разделы, содержащиеся в них, автоматически добавляются
			либо в пользовательский список разделов, либо в системный.
			Ссылки на списки разделов находятся в правом верхнем углу экрана и доступны постоянно.
			"Applications" - пользовательские разделы, "Settings" - системные.
			На маленьких экранах ссылки перемещаются в навигационное меню (обозначено пиктограммой:
			<span class="fa fa-bars"></span>).
		</p>
		<div class="row">
			<div class="col-md-6">
				<img src="~/Content/images/common-pages.png" class="img-responsive ths-image" />
			</div>
			<div class="col-md-6">
				<img src="~/Content/images/system-pages.png" class="img-responsive ths-image" />
			</div>
		</div>
		<h3>Рабочие столы</h3>
		<p>
			На рабочем столе находятся виджеты — элементы управления, которые отображают полезную информацию или 
			позволяют выполнить какие-либо действия.
		</p>
		<p>
			Рабочих столов может быть несколько. Например, можно сделать отдельный рабочий стол для каждой комнаты в доме.
			Если рабочих столов больше одного, слева будет отображаться меню, с помошью которого можно переключаться между ними.
		</p>
		<p>
			Рабочие столы открываются по основному  адресу приложения 
			(т.е. по адресу <a href="http://localhost:41831" target="_blank">http://localhost:41831</a>).
			Также в любое время вы можете перейти на рабочий стол, кликнув на пиктограмму 
			<span class="fa fa-home"></span> в левом верхнем углу экрана. 
		</p>
		<p>
			Стартовая страница (и весь остальной интерфейс тоже) корректно отображается
			как на больших экранах, так и на небольших экранах мобильных устройств. На маленьких экранах
			меню переключения между рабочими столами перемещается в в навигационное меню (обозначено пиктограммой:
			<span class="fa fa-bars"></span>).
		</p>
		<div class="row">
			<div class="col-md-3">
				<img class="ths-image img-responsive" src="~/Content/images/start-page-small.png"
				     alt="Стартовая страница на маленьком экране" title="Стартовая страница на маленьком экране" />
			</div>
			<div class="col-md-9">
				<img class="ths-image img-responsive" src="~/Content/images/start-page-large.png"
				     alt="Стартовая страница на большом экране" title="Стартовая страница на большом экране" />
			</div>
		</div>
		<p>
			Изменяя настройки системы, вы можете создавать рабочие столы и размещать на них нужные вам виджеты.
			Для изменения настроек рабочих столов перейдите в раздел <kbd>Settings &rarr; Dashboard list</kbd> 
		</p>
		<p>
			На рабочем столе можно разместить несколько панелей. Каждая панель будет отображаться в виде отдельного
			блока. При добавлении панели нужно указать ее название.
		</p>
		<p>
			На панель можно добавить виджеты. Например, можно добавить виджеты управления освещением и виджет,
			показывающий температуру в комнате. При добавлении виджета нужно указать его название
			и значения его параметров. Например для виджета управления освещением нужно указать группу светильников,
			которой нужно управлять, а для виджета, отображающего температуру, нужно указать датчик микрокливата,
			с которого брать информацию. Устанавливая плагины, можно добавлять в систему новые 
			типы виджетов.
		</p>
		<div class="row">
			<div class="col-md-12">
				<img src="~/Content/images/dashboard-settings.png" class="img-responsive ths-image" />
			</div>
		</div>
		<h2>Написание простого сценария</h2>
		<p>
			Сценарии - это небольшие программы, которые выполняют некоторые действия в вашем доме.
			Сценарии пишутся на языке JavaScript, но выполняются не в браузере, а на стороне сервиса 
			автоматизации (т.е. внутри сервиса, установка которого описана чуть выше).
			Внутри сценариев доступен программный интерфейс (API), с помощью котрого вы можете
			управлять домашними устройствами или взаимодействовать с интернет-сервисами.
			Весь этот API реализован в плагинах сервиса автоматизации - устанавливая новые плагины,
			вы можете расширять доступный API новыми командами.
		</p>
		<p>
			Давайте попробуем написать простой сценарий. Это очень просто.
		</p>
		<p>
			Нажмите на ссылку "Settings" в правом верхнем углу веб-интерфейса, чтобы открыть
			список системных разделов и выберите там раздел "Scripts", чтобы открыть список
			сценариев в системе. Нажмите кнопку "Add script" и введите название нового сценария. 
		</p>
		<div class="row">
			<div class="col-md-12">
				<img src="~/Content/images/new-script.png" class="img-responsive ths-image" />
			</div>
		</div>
		<p>
			Давайте запишем сообщение в лог и включим свет в комнате при помощи адаптера nooLite.
			В открывшийся редактор сценариев скопируйте следующий код:
		</p>
		<pre>
// пишем в лог строку "hello, world!"
<strong>host</strong>.logInfo(<strong>"hello, world!"</strong>);

// включаем свет в 3 канале адаптера
<strong>host</strong>.executeMethod(<strong>"nooliteSetLevel"</strong>, 3, 100);
</pre>
		<p>
			Сохраняем сценарий и видим, что он добавился в общий список. Чтобы запустить его,
			нажмите кнопку "Run manually". При нажатии этой кнопки вы увидите сообщение
			"The script [script name] has been executed" и, если 
			<em>в момент запуска сервиса автоматизации</em> к компьютеру был подключен 
			<a href="http://thinking-home.ru/category/noolite-usb-adapters.aspx" target="_blank">
			USB адаптер nooLite</a>, то светильники, привязанные к 3-му каналу адаптера будут включены.
			После этого идем в папку с логами <em>C:\Program Files (x86)\ThinkingHome\service\Logs</em>
			и смотрим файл <em>2014-10-08-ThinkingHome.Plugins.Scripts.ScriptsPlugin.log</em>
			(вместо "2014-10-08" будет сегодняшняя дата) - там должна быть надпись
		</p>
		<p>
			<strong>2014-10-08 21:43:11.7457, Info, hello, world!</strong> (естественно, дата и время в 
			начале строки будут другими)
		</p>
		<h3>Запуск сценария по расписанию
		</h3>
		<p>
			Среди плагинов, установленных по умолчанию, есть плагин "будильники", позволяющий
			в нужное время включить сигнал будильника или запустить сценарий. Давайте настроим 
			автоматический запуск нашего сценария в нужное время.
		</p>
		<p>
			Нажмите на ссылку "Applications" в правом верхнем углу веб-интерфейса системы, чтобы открыть
			список пользовательских разделов. Выберите там раздел "Alarms" (будильники), чтобы открыть 
			весь список будильников в системе, и добавьте новый будильник, нажав на кнопку "Add".
		</p>
		<div class="row">
			<div class="col-md-12">
				<img src="~/Content/images/new-alarm.png" class="img-responsive ths-image" />
			</div>
		</div>
		<p>
			В настройках будильника укажите для него название, время срабатывания и действие, которое 
			нужно выполнить. В выпадающем списке действий будут отображаться все имеющиеся сценарии
			и специальный пункт "&lt;PLAY SOUND>" (если выбрать его, то в заданное время заиграет
			такая дебильная бодренькая музыка). Выберите в качестве выполняемого действия сценарий,
			который мы создали чуть ранее и сохраните настройки будильника. Проверьте,
			что выбранный сценарий запустился в нужное время.
		</p>
		<h3>Что дальше?</h3>
		<p>
			Мы рассмотрели установку системы, организацию ее веб-интерфейса и написание простых сценариев.
			В разделе @Html.ActionLink("Сценарии", "Scripts") вы сможете получить более подробную информацию
			о сценариях.
		</p>
	</div>
</div>
